{
  "blogs": [
    {
      "title": "My First Blog",
      "body": "Why do we use it?\nIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\n\n\nWhere does it come from?\nContrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.\n\nThe standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those interested. Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et Malorum\" by Cicero are also reproduced in their exact original form, accompanied by English versions from the 1914 translation by H. Rackham.\n\nWhere can I get some?\nThere are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.",
      "author": "mario",
      "id": 1
    },
    {
      "title": "Opening Party!",
      "body": "Why do we use it?\nIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\n\n\nWhere does it come from?\nContrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.\n\nThe standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those interested. Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et Malorum\" by Cicero are also reproduced in their exact original form, accompanied by English versions from the 1914 translation by H. Rackham.\n\nWhere can I get some?\nThere are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything embarrassing hidden in the middle of text. All the Lorem Ipsum generators on the Internet tend to repeat predefined chunks as necessary, making this the first true generator on the Internet. It uses a dictionary of over 200 Latin words, combined with a handful of model sentence structures, to generate Lorem Ipsum which looks reasonable. The generated Lorem Ipsum is therefore always free from repetition, injected humour, or non-characteristic words etc.",
      "author": "yoshi",
      "id": 2
    },
    {
      "title": "Formula 1",
      "body": "Formula One (also known as Formula 1 or F1) is the highest class of international racing for open-wheel single-seater formula racing cars sanctioned by the Fédération Internationale de l'Automobile (FIA). The World Drivers' Championship, which became the FIA Formula One World Championship in 1981, has been one of the premier forms of racing around the world since its inaugural season in 1950. The word formula in the name refers to the set of rules to which all participants' cars must conform.[1] A Formula One season consists of a series of races, known as Grands Prix, which take place worldwide on both purpose-built circuits and closed public roads.\n\nA points system is used at Grands Prix to determine two annual World Championships: one for drivers, the other for constructors. Each driver must hold a valid Super Licence, the highest class of racing licence issued by the FIA.[2] The races must run on tracks graded \"1\" (formerly \"A\"), the highest grade-rating issued by the FIA.[2]\n\nFormula One cars are the fastest regulated road-course racing cars in the world, owing to very high cornering speeds achieved through the generation of large amounts of aerodynamic downforce. Much of this downforce is generated by front and rear wings, which have the side effect of causing severe turbulence behind each car. The turbulence reduces the downforce generated by a car following directly behind, making it hard to overtake. Major changes to the cars for the 2022 season has seen greater use of ground effect aerodynamics, and modified wings to reduce the turbulence behind the cars, with the goal of making overtaking easier.[3] The cars are dependent on electronics and aerodynamics, suspension and tyres. Traction control, launch control, and automatic shifting, plus other electronic driving aids, were first banned in 1994. They were briefly reintroduced in 2001, and have more recently been banned since 2004 and 2008, respectively.[4]\n\nWith the average annual cost of running a team – designing, building, and maintaining cars, pay, transport – being approximately US$248 million,[5] its financial and political battles are widely reported. On 23 January 2017, Liberty Media completed its acquisition of the Formula One Group, from private-equity firm CVC Capital Partners for $8 billion.[6][7]",
      "author": "mario",
      "id": 3
    },
    {
      "title": "Arsenal F.C",
      "body": "Arsenal Football Club, commonly referred to as Arsenal,[4] is a professional football club based in Islington, London, England. Arsenal plays in the Premier League, the top flight of English football. The club has won 13 league titles (including one unbeaten title), a record 14 FA Cups, two League Cups, 16 FA Community Shields, one European Cup Winners' Cup, and one Inter-Cities Fairs Cup. In terms of trophies won, it is the third-most successful club in English football.\n\nArsenal was the first club from the South of England to join the Football League in 1893, and they reached the First Division in 1904. Relegated only once, in 1913, they continue the longest streak in the top division,[7] and have won the second-most top-flight matches in English football history.[8] In the 1930s, Arsenal won five League Championships and two FA Cups, and another FA Cup and two Championships after the war. In 1970–71, they won their first League and FA Cup Double. Between 1989 and 2005, they won five League titles and five FA Cups, including two more Doubles. They completed the 20th century with the highest average league position.[9] Between 1998 and 2017, Arsenal qualified for the UEFA Champions League for 19 straight seasons.[10]\n\nHerbert Chapman, who changed the fortunes of Arsenal forever, won the club its first silverware, and his legacy led the club to dominate the 1930s decade; Chapman, however, died of pneumonia in 1934, aged 55. He helped introduce the WM formation, floodlights, and shirt numbers;[11] he also added the white sleeves and brighter red to the club's jersey.[12] Arsène Wenger is the longest-serving manager and won the most trophies. He won a record seven FA Cups, and his title-winning team set an English record for the longest top-flight unbeaten league run at 49 games between 2003 and 2004,[13] receiving the nickname The Invincibles.\n\nIn 1886, munitions workers at the Royal Arsenal in Woolwich founded the club as Dial Square. In 1913, after the destruction of their South London stadium by suffragettes, the club crossed the city to Arsenal Stadium in Highbury, becoming close neighbours of Tottenham Hotspur, and creating the North London derby. In 2006, they moved to the nearby Emirates Stadium. With an annual revenue of £340.3m in the 2019–20 season,[14] Arsenal was estimated to be worth US$2.68 billion by Forbes, making it the world's eighth most valuable club,[15] while it is one of the most followed on social media.[16] The motto of the club has long been Victoria Concordia Crescit, Latin for \"Victory Through Harmony\".",
      "author": "mario",
      "id": 4
    },
    {
      "title": "JavaScript",
      "body": "JavaScript (/ˈdʒɑːvəskrɪpt/),[10] often abbreviated JS, is a programming language that is one of the core technologies of the World Wide Web, alongside HTML and CSS.[11] As of 2022, 98% of websites use JavaScript on the client side for webpage behavior,[12] often incorporating third-party libraries.[13] All major web browsers have a dedicated JavaScript engine to execute the code on users' devices.\n\nJavaScript is a high-level, often just-in-time compiled language that conforms to the ECMAScript standard.[14] It has dynamic typing, prototype-based object-orientation, and first-class functions. It is multi-paradigm, supporting event-driven, functional, and imperative programming styles. It has application programming interfaces (APIs) for working with text, dates, regular expressions, standard data structures, and the Document Object Model (DOM).\n\nThe ECMAScript standard does not include any input/output (I/O), such as networking, storage, or graphics facilities. In practice, the web browser or other runtime system provides JavaScript APIs for I/O.\n\nJavaScript engines were originally used only in web browsers, but are now core components of some servers and a variety of applications. The most popular runtime system for this usage is Node.js.\n\nAlthough Java and JavaScript are similar in name, syntax, and respective standard libraries, the two languages are distinct and differ greatly in design.",
      "author": "yoshi",
      "id": 5
    },
    {
      "title": "Europa League",
      "body": "The UEFA Europa League (abbreviated as UEL), formerly the UEFA Cup, is an annual football club competition organised since 1971 by the Union of European Football Associations (UEFA) for eligible European football clubs. It is the second-tier competition of European club football, ranking below the UEFA Champions League and above the UEFA Europa Conference League. The UEFA Cup was the third-tier competition from 1971 to 1999 before the UEFA Cup Winners' Cup was discontinued,[1][2] and it is still often referred to as the “C3” in reference of this. Clubs qualify for the competition based on their performance in their national leagues and cup competitions.\n\nIntroduced in 1971 as the UEFA Cup, it replaced the Inter-Cities Fairs Cup. In 1999, the UEFA Cup Winners' Cup was merged with the UEFA Cup and discontinued as a separate competition.[3] From the 2004–05 season a group stage was added before the knockout phase. The competition has been known as the Europa League since the 2009–10 season,[4][5] following a change in format.[6] The 2009 re-branding included a merge with the UEFA Intertoto Cup, producing an enlarged competition format, with an expanded group stage and a change in qualifying criteria. The winner of the UEFA Europa League qualifies for the UEFA Super Cup and, since the 2014–15 season, qualifies for the following season's UEFA Champions League, entering at the group stage.\n\nSpanish clubs have the highest number of victories (13 wins), followed by teams from England and Italy (9 wins each). The title has been won by 29 clubs, 14 of which have won it more than once. The most successful club in the competition is Sevilla, with six titles. Eintracht Frankfurt are the reigning champions, having beaten Rangers 5–4 on penalties in the 2022 final.",
      "author": "yoshi",
      "id": 6
    },
    {
      "title": "Google",
      "body": "Google LLC (/ˈɡuːɡəl/ (listen)) is an American multinational technology company that focuses on search engine technology, online advertising, cloud computing, computer software, quantum computing, e-commerce, artificial intelligence,[9] and consumer electronics. It has been referred to as the \"most powerful company in the world\"[10] and one of the world's most valuable brands due to its market dominance, data collection, and technological advantages in the area of artificial intelligence.[11][12][13] It is considered one of the Big Five American information technology companies, alongside Amazon, Apple, Meta, and Microsoft.\n\nGoogle was founded on September 4, 1998, by Larry Page and Sergey Brin while they were PhD students at Stanford University in California. Together they own about 14% of its publicly listed shares and control 56% of the stockholder voting power through super-voting stock. The company went public via an initial public offering (IPO) in 2004. In 2015, Google was reorganized as a wholly owned subsidiary of Alphabet Inc. Google is Alphabet's largest subsidiary and is a holding company for Alphabet's Internet properties and interests. Sundar Pichai was appointed CEO of Google on October 24, 2015, replacing Larry Page, who became the CEO of Alphabet. On December 3, 2019, Pichai also became the CEO of Alphabet.[14]\n\nThe company has since rapidly grown to offer a multitude of products and services beyond Google Search, many of which hold dominant market positions. These products address a wide range of use cases, including email (Gmail), navigation (Maps), cloud computing (Cloud), web browsing (Chrome), video sharing (YouTube), productivity (Workspace), operating systems (Android), cloud storage (Drive), language translation (Translate), photo storage (Photo), video calling (Meet), smart home (Nest), smartphones (Pixel), wearable technology (Fitbit), gaming (Stadia), music streaming (YouTube Music), video on demand (TV), artificial intelligence (Assistant), machine learning APIs (TensorFlow), AI chips (TPU), and more. Discontinued Google products include Glass, Google+, Reader, Play Music, Nexus, Hangouts, and Inbox by Gmail.[15][16]\n\nGoogle strives for ambitious technological innovations aimed at solving humanity's biggest problems.[17] Some of these include quantum computing (Sycamore), self-driving cars (Waymo, formerly the Google Self-Driving Car Project), smart cities (Sidewalk Labs), and transformer models (Google Brain).[18]\n\nGoogle and YouTube are the two most visited websites worldwide followed by Facebook and Twitter. Google is also the largest search engine, mapping and navigation application, email provider, office suite, video sharing platform, photo and cloud storage provider, mobile operating system, web browser, ML framework, and AI virtual assistant provider in the world as measured by market share. On the list of most valuable brands, Google is ranked second by Forbes[19] and fourth by Interbrand.[20] It has received significant criticism involving issues such as privacy concerns, tax avoidance, censorship, search neutrality, antitrust and abuse of its monopoly position.",
      "author": "mario",
      "id": 7
    },
    {
      "title": "Node js",
      "body": "Basic Login System with Node.js,\nExpress, and MySQL\nIn this tutorial, we'll be developing a login system with Node.js, Express, and\nMySQL. Node.js will enable us to develop our application with JavaScript,\nExpress is a web framework, and we'll be using MySQL to store and retrieve\naccount details (username, password, etc.).\nThe login system we'll be developing is similar to that of the PHP login system\ntutorial, but will not be as comprehensive.\nThe Advanced package includes additional features and a download link to the\nsource code. For more detailed information and screenshots, click here.\nContents\n1. Why create a login system with Node.js as opposed to PHP?\n2. Getting Started\n1. What You Will Learn in this Tutorial\n2. Requirements\n3. Setup & File Structure\n3. Styling the Login Form with CSS\n4. Creating the Login Template with HTML\n5. Creating the Login App with Node.js\n1. Why create a login system with Node.js as opposed to PHP?\nNode.js is a powerful open-source server environment that leverages JavaScript\nas its core scripting language.\nAs more people become aware of Node.js, it is becoming increasingly popular\nin the development of web applications. Therefore, if you plan to develop\napplications for the future web, I highly suggest you enhance your knowledge\nwith Node.js.\nNode.js's package manager (NPM) already has over 450,000 packages\navailable for you to download. Those numbers alone indicate how fast it's\ngrowing.\nDid you know?Unlike PHP, Node.js does not depend on Apache or Nginx because\nNode.js is its own environment.\nIf you are familiar with JavaScript, you will enjoy developing applications with\nNode.js, and will be able to adapt very easily.\n2. Getting Started\nBefore we start developing our Node.js login system, we need to install\nsoftware and packages that our app will depend on, and subsequently create\nthe structure for our app.\n2.1. What You Will Learn in this Tutorial\n• Establishing a connection to a MySQL database and selecting\nrows using MySQL queries.\n• Implementing GET and POST requests with Node.js and\nExpress.\n• Designing a login form with CSS3.\n• Implementing validation that will ensure the captured data is\nvalid.\n• Leveraging sessions, which will determine whether a user is\nlogged in or not.\n2.2. Requirements\n• MySQL Server >= 5.6\n• Node.js\n• Express - Install with command: npm install express --save .\n• Express Sessions - Install with command: npm install expresssession\n--save .\n• MySQL for Node.js - Install with command: npm install mysql --\nsave .\n2.3. Setup & File Structure\nFollow the below instructions.\n• Create a new directory called nodelogin , which can be created\nanywhere on your environment.\n• Open command line as administrator, and navigate to your\nnew directory with the following command: cd c:\\nodeprojects\\\nnodelogin\n• Run the command: npm init - it will prompt us to enter a\npackage name, enter: login .\n• When it prompts to enter the entry point, enter login.js .\n• We need to install the packages listed in the requirements, so\nwe must execute the commands listed in\nthe requirements above.\nA new directory will appear called node_modules , which is populated with all\nthe modules we've installed. Don't delete this directory, otherwise it will break\nour app.\nFile Structure\n\\-- nodelogin\n|-- login.html\n|-- login.js\n\\-- static\n|-- style.css\n3. Styling the Login Form with CSS\nCascading style sheets will enable us to structure the login form and make it\nlook more appealing. The stylesheet file consists of properties that are\nassociated with HTML elements.\nEdit the style.css file and add:\nCSSCopy\n* {\nbox-sizing: border-box;\nfont-family: -apple-system, BlinkMacSystemFont, \"segoe ui\", roboto,\noxygen, ubuntu, cantarell, \"fira sans\", \"droid sans\", \"helvetica neue\",\nArial, sans-serif;\nfont-size: 16px;\n}\nbody {\nbackground-color: #435165;\n}\n.login {\nwidth: 400px;\nbackground-color: #ffffff;\nbox-shadow: 0 0 9px 0 rgba(0, 0, 0, 0.3);\nmargin: 100px auto;\n}\n.login h1 {\ntext-align: center;\ncolor: #5b6574;\nfont-size: 24px;\npadding: 20px 0 20px 0;\nborder-bottom: 1px solid #dee0e4;\n}\n.login form {\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: center;\npadding-top: 20px;\n}\n.login form label {\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nwidth: 50px;\nheight: 50px;\nbackground-color: #3274d6;\ncolor: #ffffff;\n}\n.login form input[type=\"password\"], .login form input[type=\"text\"] {\nwidth: 310px;\nheight: 50px;\nborder: 1px solid #dee0e4;\nmargin-bottom: 20px;\npadding: 0 15px;\n}\n.login form input[type=\"submit\"] {\nwidth: 100%;\npadding: 15px;\nmargin-top: 20px;\nbackground-color: #3274d6;\nborder: 0;\ncursor: pointer;\nfont-weight: bold;\ncolor: #ffffff;\ntransition: background-color 0.2s;\n}\n.login form input[type=\"submit\"]:hover {\nbackground-color: #2868c7;\ntransition: background-color 0.2s;\n}\nThat's all we need to add to our CSS file.\n4. Creating the Login Template with HTML\nThe login form will consist of an HTML form element and input elements,\nenabling the user to enter their details and submit them. There is no need to\ninclude Node.js code in the template file.\nEdit the login.html file and add:\nHTMLCopy\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width,minimumscale=\n1\">\n<title>Login</title>\n<!-- the form awesome library is used to add icons to our form -->\n<link rel=\"stylesheet\"\nhref=\"https://use.fontawesome.com/releases/v5.7.1/css/all.css\">\n<!-- include the stylesheet file -->\n<link href=\"/style.css\" rel=\"stylesheet\" type=\"text/css\">\n</head>\n<body>\n<div class=\"login\">\n<h1>Login</h1>\n<form action=\"/auth\" method=\"post\">\n<label for=\"username\">\n<!-- font awesome icon -->\n<i class=\"fas fa-user\"></i>\n</label>\n<input type=\"text\" name=\"username\"\nplaceholder=\"Username\" id=\"username\" required>\n<label for=\"password\">\n<i class=\"fas fa-lock\"></i>\n</label>\n<input type=\"password\" name=\"password\"\nplaceholder=\"Password\" id=\"password\" required>\n<input type=\"submit\" value=\"Login\">\n</form>\n</div>\n</body>\n</html>\nLet's narrow down what each element will do.\n• Form — we need to use a form element to submit data to our\nNode.js app. The action attribute will point to our auth route\n(POST request), which we will create later on.\n• Input (username) — will capture the user's username. In\naddition, the required attribute is declared to ensure the\nfield is mandatory.\n• Input (password) — will capture the user's password.\n• Input (submit) — button that will be used to submit the\nform.\nThe login template will enable users to submit their details, and we'll use\nNode.js to validate the details. We'll be using a POST request to capture the\ndetails, which we can then handle in our Node.js auth route.\n5. Creating the Login App with Node.js\nNow that we have all our basics finished, we can finally start developing our\napp with Node.js.\nTo use a module in a Node.js app, we need to include it. Therefore, we need to\nadd the following variables to our login.js file:\nJSCopy\nconst mysql = require('mysql');\nconst express = require('express');\nconst session = require('express-session');\nconst path = require('path');\nThe above code will include the MySQL, Express, Express-session, and Path\nmodules, and associate them with the variables we have declared.\nBefore we implement the database connection code, we need a database to\nconnect to. Therefore, we must execute the below SQL statement either with\ncommand line or your preferred MySQL Editor. Make sure the MySQL server is\nrunning on port 3306.\nSQLCopy\nCREATE DATABASE IF NOT EXISTS `nodelogin` DEFAULT CHARACTER SET utf8 COLLATE\nutf8_general_ci;\nUSE `nodelogin`;\nCREATE TABLE IF NOT EXISTS `accounts` (\n`id` int(11) NOT NULL AUTO_INCREMENT,\n`username` varchar(50) NOT NULL,\n`password` varchar(255) NOT NULL,\n`email` varchar(100) NOT NULL,\nPRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;\nINSERT INTO `accounts` (`id`, `username`, `password`, `email`) VALUES (1,\n'test', 'test', 'test@test.com');\nThe above SQL statement will create the database ( nodelogin ) and create\nthe accounts table. In addition, it will insert a test account that we can use for\ntesting purposes.\nWe can now connect to our database with the following code:\nJSCopy\nconst connection = mysql.createConnection({\nhost : 'localhost',\nuser : 'root',\npassword : '',\ndatabase : 'nodelogin'\n});\nThe connection details must reflect your database credentials. In most local\nenvironments, the default username is root , so you might not have to change\nanything, but in production mode, we highly suggest you change the default\nusername for MySQL and set a strong password.\nExpress is what we'll use for our web application, which includes packages that\nare essential for server-side web development, such as sessions and handling\nHTTP requests.\nAdd the following code to initialize express:\nJSCopy\nconst app = express();\nAfter, we need to associate the modules we'll be using with Express:\nJSCopy\napp.use(session({\nsecret: 'secret',\nresave: true,\nsaveUninitialized: true\n}));\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\napp.use(express.static(path.join(__dirname, 'static')));\nMake sure to update the secret code variable when declaring the session\nfunction as it will used to secure the session data. We'll be using sessions to\ndetermine whether the user is logged-in or not.\nThe json and urlencoded methods will extract the form data from\nour login.html file.\nSecurity TipWhen deploying your project to a production server, ensure you're\nleveraging SSL as it will help secure the browser cookies that are associated with\nsessions.\nAfter, we need to declare the login route that will output our login.html file to\nthe client using a GET request.\nAdd the following:\nJSCopy\n// http://localhost:3000/\napp.get('/', function(request, response) {\n// Render login template\nresponse.sendFile(path.join(__dirname + '/login.html'));\n});\nWhen the client establishes a new connection to our Node.js server, it will\noutput the login.html file.\nNext, we need to add a new route that will authenticate the user.\nAdd the following:\nJSCopy\n// http://localhost:3000/auth\napp.post('/auth', function(request, response) {\n// Capture the input fields\nlet username = request.body.username;\nlet password = request.body.password;\n// Ensure the input fields exists and are not empty\nif (username && password) {\n// Execute SQL query that'll select the account from the\ndatabase based on the specified username and password\nconnection.query('SELECT * FROM accounts WHERE username = ?\nAND password = ?', [username, password], function(error, results, fields) {\n// If there is an issue with the query, output the\nerror\nif (error) throw error;\n// If the account exists\nif (results.length > 0) {\n// Authenticate the user\nrequest.session.loggedin = true;\nrequest.session.username = username;\n// Redirect to home page\nresponse.redirect('/home');\n} else {\nresponse.send('Incorrect Username and/or\nPassword!');\n}\nresponse.end();\n});\n} else {\nresponse.send('Please enter Username and Password!');\nresponse.end();\n}\n});\nThe above code will create our authentication route using the POST method,\nwhich will capture our input fields when the user submits the form.\nRemember the action we declared for our form in the login template? We are\nusing the same value for the path in our new route, so when the user submits\nthe form, the /auth will be appended to the URL.\nWhen the user submits the form, the code will check if both input fields are not\nempty and will subsequently select the account from our accounts table in our\nMySQL database. The user is successfully authenticated and redirected to the\nhome page if the account exists. If not, they will encounter an error message.\nThe loggedin session variable will be used to determine whether the user is\nlogged in or not, and the username variable we can use to output on the home\npage.\nWe can finally create the home route that will output the user's username.\nAdd the following:\nJSCopy\n// http://localhost:3000/home\napp.get('/home', function(request, response) {\n// If the user is loggedin\nif (request.session.loggedin) {\n// Output username\nresponse.send('Welcome back, ' + request.session.username +\n'!');\n} else {\n// Not logged in\nresponse.send('Please login to view this page!');\n}\nresponse.end();\n});\nFinally, our Node.js server needs to listen on a port, so for testing purposes, we\ncan use port 3000.\nAdd the following:\nJSCopy\napp.listen(3000);\nIdeally, when you deploy your login system to a production server, you would\nwant your server to listen on port 80, so you don't have to specify the port\nnumber in the URL.\nTo start our Node.js app, we can execute the command node login.js in\ncommand line. If we navigate to http://localhost:3000/ in our browser, we\nshould see the login form, which should look like the following:\nhttp://localhost:3000/\nYou can proceed to log in with the test account (username: test, password:\ntest). If successful, you will see the username displayed on the screen.\nFull login.js Source\nJSCopy\nconst mysql = require('mysql');\nconst express = require('express');\nconst session = require('express-session');\nconst path = require('path');\nconst connection = mysql.createConnection({\nhost : 'localhost',\nuser : 'root',\npassword : '',\ndatabase : 'nodelogin'\n});\nconst app = express();\napp.use(session({\nsecret: 'secret',\nresave: true,\nsaveUninitialized: true\n}));\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\napp.use(express.static(path.join(__dirname, 'static')));\n// http://localhost:3000/\napp.get('/', function(request, response) {\n// Render login template\nresponse.sendFile(path.join(__dirname + '/login.html'));\n});\n// http://localhost:3000/auth\napp.post('/auth', function(request, response) {\n// Capture the input fields\nlet username = request.body.username;\nlet password = request.body.password;\n// Ensure the input fields exists and are not empty\nif (username && password) {\n// Execute SQL query that'll select the account from the\ndatabase based on the specified username and password\nconnection.query('SELECT * FROM accounts WHERE username = ?\nAND password = ?', [username, password], function(error, results, fields) {\n// If there is an issue with the query, output the\nerror\nif (error) throw error;\n// If the account exists\nif (results.length > 0) {\n// Authenticate the user\nrequest.session.loggedin = true;\nrequest.session.username = username;\n// Redirect to home page\nresponse.redirect('/home');\n} else {\nresponse.send('Incorrect Username and/or\nPassword!');\n}\nresponse.end();\n});\n} else {\nresponse.send('Please enter Username and Password!');\nresponse.end();\n}\n});\n// http://localhost:3000/home\napp.get('/home', function(request, response) {\n// If the user is loggedin\nif (request.session.loggedin) {\n// Output username\nresponse.send('Welcome back, ' + request.session.username +\n'!');\n} else {\n// Not logged in\nresponse.send('Please login to view this page!');\n}\nresponse.end();\n});\napp.listen(3000);\nConclusion\nYou should now have a basic understanding of how a login system works and\nthe fundamentals involved. While we don't recommend deploying the system\nto a production environment, you can, however, use it as a base in your\ndevelopment projects.",
      "author": "yoshi",
      "id": 8
    }
  ]
}